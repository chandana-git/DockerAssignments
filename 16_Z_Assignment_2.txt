Your company has recently decided to use Docker to run containers in production. They have built some Docker images to run their own proprietary software and need a place to store and manage these images. You have been asked to build a secure, private Docker registry for use by the company. In order to verify that everything works, you have also been asked to configure a Docker workstation server to push to and pull from the registry.

To complete this lab, ensure that the following requirements are met for the registry:

1. A private Docker registry is running on the Docker registry server using version 2 of the registry image.
2. The container name for the registry should be registry.
3. The registry should always automatically restart if it stops or the Docker daemon or server restarts.
4. The registry should require authentication. Set up an initial account with the username docker and the password d0ck3rrU73z.
5. The registry should use TLS with a self-signed certificate.
6. The registry should listen on port 443.


Set up the Docker workstation server to meet the following requirements:

1. Docker is logged in to the private registry.
2. Docker is configured to accept the self-signed cert. Do not turn off certificate verification using the insecure-registries setting.
3. To confirm that everything is working, push a test image called ip-10-0-1-101:443/test-image:1 to the private registry. You can pull any image from Docker hub and tag it with ip-10-0-1-101:443/test-image:1 as a test.
4. Delete the test image locally and pull it from the registry.

[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]

Good luck!
------------------------------------------------------------------------------------------

Creating a directory in which we’ll store our configuration and certificates.
# Create a directory and access it
$ mkdir registry && cd "$_"

we’ll create two subdirectories: one for our TLS configuration and one for our htpasswd configuration.
# Create subdirectories
$ mkdir certs
$ mkdir auth

We’ll generate a key and secure it. After that, we’ll use the key to generate our self-signed certificate.
# Generate private key
$ cd certs/
$ openssl genrsa 1024 > domain.key
$ chmod 400 domain.key
# Generate certificate 
$ openssl req -new -x509 -nodes -sha1 -days 365 -key domain.key -out domain.crt
# Verify
$ ls
domain.crt domain.key

# Access auth/ directory
$ cd ../auth/

# Use the registry container to generate a htpasswd file
root@ip-172-31-34-19:/home/ubuntu/registry/auth# docker run --entrypoint htpasswd   registry:2 -Bbn docker d0ck3rrU73z > htpasswd

Verify

root@ip-172-31-34-19:/home/ubuntu/registry/auth# cat htpasswd
docker:$2y$05$ryya6lqkenAjUxxHuh8NAuh.ZgptZwJusKDWAWtjSs/AVxK9yJoW.

# Go back inside your registry/ directory

root@ip-172-31-34-19:/home/ubuntu/registry/auth# cd ..

# Start Registry container

root@ip-172-31-34-19:/home/ubuntu/registry# docker run -d \
>   --restart=always \
>   --name registry \
>   -v `pwd`/auth:/auth \
>   -v `pwd`/certs:/certs \
>   -v `pwd`/certs:/certs \
>   -e REGISTRY_AUTH=htpasswd \
>   -e REGISTRY_AUTH_HTPASSWD_REALM="Registry Realm" \
>   -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
>   -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \
>   -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
>   -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
>   -p 443:443 \
>   registry:2

root@ip-172-31-34-19:/home/ubuntu/registry# docker login localhost:443
Username: docker
Password:
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

#pull an image
root@ip-172-31-34-19:/home/ubuntu/registry# docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
afb6ec6fdc1c: Pull complete
b90c53a0b692: Pull complete
11fa52a0fdc0: Pull complete
Digest: sha256:30dfa439718a17baafefadf16c5e7c9d0a1cde97b4fd84f63b69e13513be7097
Status: Downloaded newer image for nginx:latest

#push an image
Push an image or a repository to a registry
root@ip-172-31-34-19:/home/ubuntu/registry# docker push localhost:443/ng
The push refers to repository [localhost:443/ng]
6c7de695ede3: Pushed
2f4accd375d9: Pushed
ffc9b21953f4: Pushed
latest: digest: sha256:8269a7352a7dad1f8b3dc83284f195bac72027dd50279422d363d49311ab7d9b size: 948
root@ip-172-31-34-19:/home/ubuntu/registry# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              9beeba249f3e        2 days ago          127MB
localhost:443/ng    latest              9beeba249f3e        2 days ago          127MB
registry            2                   708bc6af7e5e        3 months ago        25.8MB
